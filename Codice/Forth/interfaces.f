
\-------------------
\    VARIABILI
\-------------------

\ Contiene la larghezza del bordo
VARIABLE BORDER_W
: GBORDER_W   BORDER_W @ ; 						\ (    -- b1 )
: SBORDER_W   BORDER_W ! ;						\ ( a1 --    )

\ Contiene l'altezza del bordo
VARIABLE BORDER_H
: GBORDER_H   BORDER_H @ ;						\ (    -- b1 )
: SBORDER_H   BORDER_H ! ;						\ ( a1 --    )

\ Contiene lo spessore del bordo
VARIABLE BORDER_S
: GBORDER_S   BORDER_S @ ;						\ (    -- b1 )
: SBORDER_S   BORDER_S ! ;						\ ( a1 --    )

\-------------------
\    	METODI
\-------------------

\ Colora tutti i pixel dello scermo di nero
: CLEAR															\ (    --    )
    GFRAMEBUFFER SPIXEL  BLACK SCOLOR  300 400 PRINT_PIXEL
;

\ Stampa un bordo di qualsiasi dimensione
: BORDER														\ (    --    )
    GBORDER_S  GBORDER_W   PRINT_PIXEL
    GBORDER_H  GBORDER_S   PRINT_PIXEL  GPIXEL
    GBORDER_H  GBORDER_S - INC_PIXEL_V
    GBORDER_S  GBORDER_W   PRINT_PIXEL  SPIXEL  
    GBORDER_W  GBORDER_S - INC_PIXEL_O
    GBORDER_H  GBORDER_S   PRINT_PIXEL
;

\ Stampa pulsanti PLAY ed EXIT
: PRINT_BUTTONS													\ (    --    )
	6 SCHAR_SIZE
	GFRAMEBUFFER 2126EC +  SPIXEL  .P. .L. .A. .Y. 4 PRINT_WORD
	GFRAMEBUFFER 27C6EC +  SPIXEL  .E. .X. .I. .T. 4 PRINT_WORD
;

\ Permette la selezione del pulsante PLAY o EXIT
: CONTROL_BUTTONS												\ (    --    )
	0 
	2 SBORDER_S  59 SBORDER_H  C0 SBORDER_W
	WHITE SCOLOR  GFRAMEBUFFER 1FE674 +  SPIXEL BORDER
	BEGIN
		CONTROL_RECEIVER2  GSAMPLE
		DUP 2 =  IF
			SWAP DUP  1 =  IF
				1 - BLACK SCOLOR  GFRAMEBUFFER 268674 +  SPIXEL BORDER
					WHITE SCOLOR  GFRAMEBUFFER 1FE674 +  SPIXEL BORDER
			THEN
			SWAP
		ELSE
			DUP 8 =  IF
				SWAP DUP  0 =  IF
					1 + BLACK SCOLOR  GFRAMEBUFFER 1FE674 +  SPIXEL BORDER 
						WHITE SCOLOR  GFRAMEBUFFER 268674 +  SPIXEL BORDER
				THEN
				SWAP
			THEN
		THEN
		GCLOCK STIME
	5 = UNTIL
;

\ Inizializazione di SELECTION
: INITIALIZE_SELECTION											\ (    --    )
    CLEAR   WHITE SCOLOR  GFRAMEBUFFER SPIXEL  
	300 SBORDER_H  400 SBORDER_W  4 SBORDER_S  BORDER
    18 SCHAR_SIZE  GFRAMEBUFFER BC290 +  SPIXEL
	.S. .N. .A. .K. .E. 5 PRINT_WORD
	PRINT_BUTTONS 
;

\ Inizializzazione di PLAY										\ (    --    )
: INITIALIZE_PLAY
    CLEAR   WHITE SCOLOR   GFRAMEBUFFER SPIXEL  
	300 SBORDER_H  400 SBORDER_W  4 SBORDER_S  BORDER

	3E97A000 SPIXEL  4 400 PRINT_PIXEL
	
	4 SCHAR_SIZE
	GFRAMEBUFFER 1A068 +  SPIXEL  .S. .C. .O. .R. .E. .DP.  6 PRINT_WORD
	GFRAMEBUFFER 1A2A8 +  SPIXEL   SET_SCORE   0 PRINT_NUMBER

    GFRAMEBUFFER 4C068 +  SPIXEL  .T. .I. .M. .E. .DP. 5 PRINT_WORD  
	GFRAMEBUFFER 4C248 +  STIMER_PIXEL
	WHITE STIMER_COLOR   4 STIMER_SIZE   SET_TIMER

    PRINT_SNAKE  PRINT_APPLE  DROP

	0 SSTATE_RECEIVER
	BEGIN  CONTROL_RECEIVER2  GSAMPLE 5 =  UNTIL
    6 SSAMPLE
	SAVE_TIMER
;

\ Blocca il flusso di esecuzione e attende il comando
\ per ricominciare 
: PAUSE_INTERFACE												\ (    --    )
	GFRAMEBUFFER 1A5E0 +  SPIXEL  WHITE SCOLOR  A SCHAR_SIZE
	.P. .A. .U. .S. .E. 5 PRINT_WORD

	BEGIN  CONTROL_RECEIVER2 GSAMPLE 5 =  UNTIL

	GFRAMEBUFFER 1A5E0 +  SPIXEL  BLACK SCOLOR
	.P. .A. .U. .S. .E. 5 PRINT_WORD
	
	GHEAD_DIR
	DUP 0 =  IF 6 SSAMPLE  ELSE
	DUP 1 =  IF 8 SSAMPLE  ELSE
	DUP 2 =  IF 4 SSAMPLE  ELSE
				2 SSAMPLE
	THEN THEN THEN
    DROP
;

\ Inizializzazione di GAME_OVER
: INITIALIZE_GAME_OVER														\ (    --    )
	CLEAR  WHITE SCOLOR  GFRAMEBUFFER SPIXEL  
	300 SBORDER_H  400 SBORDER_W  4 SBORDER_S  BORDER

	GFRAMEBUFFER 79234 +  SPIXEL  E SCHAR_SIZE   
	.G. .A. .M. .E. .SPACE. .O. .V. .E. .R.  9 PRINT_WORD

	GFRAMEBUFFER 13E604 + SPIXEL  4 SCHAR_SIZE   .T. .I. .M. .E. .DP.  5 PRINT_WORD
	GFRAMEBUFFER 13E7E4 + SPIXEL 

	GMINUTES  DUP A / 0 =  IF  0 PRINT_NUMBER  THEN
	PRINT_NUMBER  .DP. PRINT_CHAR  8 INC_PIXEL_O
	
	GSECONDS  DUP A / 0 =  IF  0 PRINT_NUMBER  THEN
	PRINT_NUMBER  .DP. PRINT_CHAR  8 INC_PIXEL_O

	GDECSECONDS PRINT_NUMBER

	GFRAMEBUFFER 182604 +  SPIXEL  .S. .C. .O. .R. .E. .DP. 6 PRINT_WORD
	GFRAMEBUFFER 182844 +  SPIXEL  GSCORE PRINT_NUMBER
	
	PRINT_BUTTONS
;
